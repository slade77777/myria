{"version":3,"file":"static/chunks/pages/nodes-4710731f856b1dc0.js","mappings":"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","sources":["webpack://_N_E/./src/components/Subscribe.tsx","webpack://_N_E/./src/pages/nodes/index.tsx","webpack://_N_E/?2453"],"sourcesContent":["import Axios from 'axios';\nimport * as yup from 'yup';\nimport React, { useState } from 'react';\nimport apiClient, { additionalApiClient } from 'src/client';\nimport CircleCheck from './icons/CircleCheck';\nimport Input from './Input';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { t, Trans } from '@lingui/macro';\nimport axios from 'axios';\n\ninterface IFormInputs {\n  email: string;\n}\n\nconst schema = yup\n  .object({\n    email: yup\n      .string()\n      .email(t`Invalid email!`)\n      .required(t`Email is required!`)\n  })\n  .required();\n\nconst Subscribe: React.FC = () => {\n  const [error, setError] = useState('');\n  const [success, setIsSubmitSuccess] = useState<boolean>(false);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitting }\n  } = useForm<IFormInputs>({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = async (data: IFormInputs) => {\n    try {\n      setError('');\n      setIsSubmitSuccess(false);\n\n      await additionalApiClient\n        .post(`/subscribe`, data)\n        .then(() => setIsSubmitSuccess(true))\n        .catch((error) => {\n          setError(error.message);\n          setIsSubmitSuccess(false);\n        });\n      reset();\n    } catch (error: any) {\n      setError(error?.message);\n      setIsSubmitSuccess(false);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        boxShadow: '0px 0px 40px 10px rgba(0, 0, 0, 0.3)'\n      }}\n      className=\"mx-auto flex max-w-content flex-col items-center rounded-[20px] bg-[url('/images/games/panel_op.jpeg')] bg-cover bg-center p-[32px] md:py-[158px]\">\n      <h2 className=\"heading-list leading-[30px] md:heading-lg md:mt-4\">\n        <Trans>Pre register to stay up to date</Trans>\n      </h2>\n      <div className=\"mt-6 w-full max-w-[585px] \">\n        <p className=\"max-w-[616px] text-base leading-6 text-light\">\n          <Trans>\n            Sign up to our newsletter to receive development updates, token and NFT drops, and\n            exclusive promotions.\n          </Trans>\n        </p>\n        <form onSubmit={handleSubmit(onSubmit)} noValidate>\n          <div className=\"mt-10 grid grid-cols-1 gap-4 sm:grid-cols-[1fr_auto]\">\n            <Input\n              placeholder={t`Enter your email address`}\n              {...register('email')}\n              error={!!errors.email || !!error}\n              errorText={errors.email?.message || error}\n              containerClassName=\"relative\"\n              message={\n                success ? (\n                  <p className=\"absolute bottom-[-20px] flex items-center text-xs leading-[15px] text-white\">\n                    <CircleCheck />\n                    <span className=\"ml-1\">\n                      <Trans>Thank you for subscribing!</Trans>\n                    </span>\n                  </p>\n                ) : null\n              }\n            />\n            <button className=\"btn-lg btn-primary\" disabled={isSubmitting}>\n              <Trans>SUBMIT</Trans>\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Subscribe;\n","import { t, Trans } from '@lingui/macro';\nimport clsx from 'clsx';\nimport React from 'react';\nimport Subscribe from 'src/components/Subscribe';\nimport CardWithIcon from 'src/components/CardWithIcon';\nimport Collapse from 'src/components/Collapse';\nimport { headerHeight } from 'src/components/Header';\nimport ChartIcon from 'src/components/icons/ChartIcon';\nimport ChevronDownIcon from 'src/components/icons/ChevronDownIcon';\nimport StarIcon from 'src/components/icons/StarIcon';\nimport UserIcon from 'src/components/icons/UserIcon';\nimport Page from 'src/components/Page';\nimport { paddingX } from 'src/utils';\n\nconst rewards = [\n  {\n    icon: (\n      <div className=\"w-[64px]\">\n        <UserIcon />\n      </div>\n    ),\n    title: <Trans>Daily $MYRIA token rewards</Trans>,\n    description: (\n      <Trans>\n        Myria node operators will receive daily $MYRIA token rewards for the nodes work.{' '}\n      </Trans>\n    )\n  },\n  {\n    icon: (\n      <div className=\"w-[64px]\">\n        <ChartIcon />\n      </div>\n    ),\n    title: <Trans>Voting rights</Trans>,\n    description: (\n      <Trans>\n        Each node is allowed to vote on proposed changes to the Myria chain and nodes will also hold\n        greater voting power throughout the Myriaverse\n      </Trans>\n    )\n  },\n  {\n    icon: (\n      <div className=\"w-[64px]\">\n        <StarIcon />\n      </div>\n    ),\n    title: <Trans>Exclusive NFTs</Trans>,\n    description: (\n      <Trans>\n        Node owners will also be rewarded with NFT drops and tokens based on their reputational\n        score as node operators and general community members.\n      </Trans>\n    ),\n    learnMore: '/'\n  }\n];\n\nconst questions = [\n  {\n    title: <Trans>What is a Myria node?</Trans>,\n    content: (\n      <Trans>\n        <p className=\"mb-2\">\n          In order to run any blockchain, including the Myria chain, nodes are required for\n          verification of network transactions. Nodes in the Myria ecosystem will be used for a\n          variety of network-supporting activities including initial test networks, block production\n          and validation.\n        </p>\n        <p>\n          In addition to their role as potential validators, node owners will also be asked to - and\n          rewarded for auxiliary blockchain network functions as the Myria ecosystem becomes more\n          advanced. These include the need for decentralized storage of certain critical information\n          in the Myria ecosystem, oracles, governance voting, as well as voting on game-specific\n          concepts.\n        </p>\n      </Trans>\n    )\n  },\n  {\n    title: <Trans>What rewards do Myria node operators receive?</Trans>,\n    content: (\n      <Trans>\n        <p className=\"mb-2\">\n          Myria node operators will receive daily $MYRIA token rewards for the nodes work.\n        </p>\n        <p className=\"mb-2\">\n          Node owners will also be rewarded with NFT drops and tokens based on their reputational\n          score as node operators and general community members.\n        </p>\n        <p>\n          Reputation scores will be determined by the playing activity of node owners, the number of\n          tokens they own and stake, previous uptime metrics, and their history of network support\n          (e.g. validation or oracle provider).\n        </p>\n      </Trans>\n    )\n  },\n  {\n    title: <Trans>How can I become a Myria node operator?</Trans>,\n    content: (\n      <Trans>\n        Buying a node license will give the owner the right to run the node (either locally or in\n        the cloud) and receive rewards as determined by governance.\n      </Trans>\n    )\n  },\n\n  {\n    title: <Trans>What are the software and hardware requirements to run a node?</Trans>,\n    content: (\n      <>\n        <Trans>\n          <p className=\"mb-2\">\n            You can choose whether you prefer to run your node in the cloud or locally.\n          </p>\n          <p className=\"mb-2\">\n            Myria node software will be available to download on Windows, Mac and Linux. Our node operation\n            is not heavily resource-intensive like traditional cryptocurrency mining. You’ll be able\n            to run our node software from your home computer with the following minimum\n            requirements:\n          </p>\n        </Trans>\n        <ul className=\"list-disc\">\n          <li>4 GB RAM</li>\n          <li>\n            <Trans>2 CPU Cores</Trans>\n          </li>\n          <li>\n            <Trans>60 GB Disk Space</Trans>\n          </li>\n          <li>\n            <Trans>An x86/X64 Processor</Trans>\n          </li>\n          <li>\n            <Trans>A Stable Internet Connection</Trans>\n          </li>\n        </ul>\n      </>\n    )\n  },\n  {\n    title: <Trans>When will Myria node licenses be sold?</Trans>,\n    content: (\n      <Trans>\n        Myria node license sales are anticipated to commence in Q2 2022 (subject to change).\n      </Trans>\n    )\n  },\n  {\n    title: <Trans>How much will a Myria node license cost?</Trans>,\n    content: (\n      <Trans>\n        {/* Founders Nodes will receive preferential pricing, with the first 100 licences initially\n        released at USD $2,000. The price of Myria node licenses will increase by USD $100 for every\n        100 sold, up to a maximum price of $51,900 for the final 100 licenses. */}\n        Details will be announced soon.\n      </Trans>\n    )\n  },\n  {\n    title: <Trans>How many Myria node licenses will be released?</Trans>,\n    content: <Trans>Only 55,000 Myria node licenses will ever be released.</Trans>\n  }\n];\nconst Nodes: React.FC = () => {\n  return (\n    <Page>\n      <div\n        style={{\n          paddingTop: headerHeight\n        }}>\n        <div\n          className={clsx(\n            paddingX,\n            \"bg-[url('/images/nodes/page-bg_op.png')] bg-right-bottom bg-no-repeat \"\n          )}>\n          <div className=\"mx-auto w-full max-w-content\">\n            <section className={'text-center '}>\n              <h1 className=\"heading-lg mx-auto mt-[50px] max-w-[756px] text-center text-brand-white md:heading-massive md:mt-[120px]\">\n                <Trans>\n                  Run a node and earn <span className=\"text-brand-mid-blue\">$MYRIA</span> and NFT\n                  rewards\n                </Trans>\n              </h1>\n              <p className=\"heading-sm mx-auto mt-[32px] max-w-[518px]\">\n                <Trans>Decentralize the network by providing computing resources</Trans>\n              </p>\n              <a className=\"btn-lg btn-primary mt-[38px]\" href=\"#subcribe\">\n                <Trans>Pre register now</Trans>\n              </a>\n            </section>\n            <section className=\"mt-[100px]\">\n              <div className=\"max-w-[715px]\">\n                <p className=\"caption text-brand-light-blue\">\n                  <Trans>a decentralized ecosystem</Trans>\n                </p>\n                <h2 className=\"heading-lg mt-4\">\n                  <Trans>Powered by the community of player-run nodes</Trans>\n                </h2>\n                <p className=\"body mt-6 text-light\">\n                  <Trans>\n                    The Myria chain is supported by a network of player-run nodes. Use your home\n                    computer to become a node operator and receive rewards and benefits for your\n                    contribution to the ecosystem.\n                  </Trans>\n                </p>\n              </div>\n            </section>\n            <section className=\"mt-[152px]\">\n              <h2 className=\"heading-sm text-center md:heading-md\">\n                <Trans>Node owner rewards</Trans>\n              </h2>\n              <div className=\"mt-[92px] grid gap-[32px] gap-y-[76px] md:grid-cols-2 lg:grid-cols-3\">\n                {rewards.map((item, idx) => (\n                  <CardWithIcon icon={item.icon} key={idx}>\n                    <div className=\"pb-[48px]\">\n                      <h3 className=\"heading-sm md:heading-md\">{item.title}</h3>\n                      <p className=\"body-sm mt-6\">{item.description}</p>\n                      {item.learnMore && (\n                        <button\n                          className=\"btn-lg btn-primary mt-[22px] inline-block\">\n                          <Trans>Releasing soon</Trans>\n                        </button>\n                      )}\n                    </div>\n                  </CardWithIcon>\n                ))}\n              </div>\n            </section>\n          </div>\n        </div>\n        <section className={clsx(paddingX, 'mx-auto mt-[152px] w-full max-w-[832px]')}>\n          <h3 className=\"heading-sm text-center md:heading-md\">\n            <Trans>Myria FAQ</Trans>\n          </h3>\n          <div className=\"mt-[48px]\">\n            {questions.map((item, idx) => (\n              <React.Fragment key={idx}>\n                <div className=\"mt-6\">\n                  <Collapse asChild>\n                    {({ open }) => (\n                      <div>\n                        <Collapse.Trigger asChild>\n                          <div className=\"flex cursor-pointer items-center justify-between\">\n                            <h3 className=\"heading-list\">{item.title}</h3>\n                            <i\n                              className={clsx('w-[24px] transition duration-300', {\n                                'rotate-180': open\n                              })}>\n                              <ChevronDownIcon />\n                            </i>\n                          </div>\n                        </Collapse.Trigger>\n                        <Collapse.Content>\n                          <div className=\"pb-2\">\n                            <p className=\"body mt-6 text-light\">{item.content}</p>\n                          </div>\n                        </Collapse.Content>\n                      </div>\n                    )}\n                  </Collapse>\n                </div>\n                <div className=\"mt-6 h-[1px] w-full bg-white opacity-20\" />\n              </React.Fragment>\n            ))}\n          </div>\n        </section>\n        <section\n          className={clsx(\n            paddingX,\n            \"mt-[112px] mb-[124px] flex min-h-[792px] w-full flex-col justify-center  bg-[url('/images/globe_op.png')] bg-center bg-no-repeat md:bg-right\"\n          )}>\n          <div className=\"mx-auto max-w-content \">\n            <div className=\"md:w-1/2\">\n              <h3 className=\"heading-sm md:heading-md\">\n                <Trans>Get a founders node today</Trans>\n              </h3>\n              <p className=\"body mt-6\">\n                <Trans>\n                  Become an integral part of the Myria ecosystem and reap the benefits of your\n                  contribution. Early founder node operators receive preferential pricing, which\n                  increases as nodes are sold.\n                </Trans>\n              </p>\n              <a className=\"btn-lg btn-primary mt-[32px]\" href=\"#subcribe\">\n                <Trans>BUY A NODE</Trans>\n              </a>\n            </div>\n          </div>\n        </section>\n        <section className={clsx(paddingX, 'mb-[124px]')} id=\"subcribe\">\n          <div className=\"mx-auto max-w-content\">\n            <Subscribe />\n          </div>\n        </section>\n      </div>\n    </Page>\n  );\n};\n\nexport default Nodes;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/nodes\",\n      function () {\n        return require(\"private-next-pages/nodes/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/nodes\"])\n      });\n    }\n  "],"names":["schema","yup","email","required","useState","error","setError","success","setIsSubmitSuccess","useForm","resolver","yupResolver","register","handleSubmit","reset","formState","errors","isSubmitting","onSubmit","data","additionalApiClient","then","message","style","boxShadow","className","noValidate","placeholder","errorText","containerClassName","disabled","rewards","icon","title","description","learnMore","questions","content","paddingTop","headerHeight","clsx","paddingX","href","map","item","idx","asChild","open","id","window","__NEXT_P","push"],"sourceRoot":""}