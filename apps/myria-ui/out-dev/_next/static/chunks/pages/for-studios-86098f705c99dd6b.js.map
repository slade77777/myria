{"version":3,"file":"static/chunks/pages/for-studios-86098f705c99dd6b.js","mappings":"80BAiBA,IAAMA,EAASC,EAAAA,GACL,CACNC,KAAMD,EAAAA,KAEHE,OACAC,SAAS,6BACZC,UAAWJ,EAAAA,KAERK,MAAM,0BACNF,SAAS,8BACZG,QAASN,EAAAA,KAENE,OACAC,SAAS,gCACZI,QAASP,EAAAA,KAENE,OACAC,SAAS,kCAEbA,WAsFH,IApF6B,WAAM,YACjC,GAA0BK,EAAAA,EAAAA,UAAS,IAA5BC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,WAAkB,GAAjDG,EAAP,KAAgBC,EAAhB,KACA,GAKIC,EAAAA,EAAAA,IAAqB,CACvBC,UAAUC,EAAAA,EAAAA,GAAYhB,KALtBiB,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MAHF,IAIEC,UAAaC,EAJf,EAIeA,OAAQC,EAJvB,EAIuBA,aAKjBC,EAAQ,mCAAG,WAAOC,GAAP,iFAEbb,EAAS,IACTE,GAAmB,GAHN,SAKPY,EAAAA,GAAAA,KACE,cAAeD,GACpBE,MAAK,kBAAMb,GAAmB,MAF3B,OAGG,SAACH,GACNC,EAASD,EAAMF,SACfK,GAAmB,MAVV,OAYbM,IAZa,gDAcbR,EAAQ,OAAC,EAAD,yBAAC,KAAOH,SAChBK,GAAmB,GAfN,yDAAH,sDAmBd,OACE,iBAAKc,UAAU,2IAAf,WACE,eAAIA,UAAU,uCAAd,2BACA,kBAAMJ,SAAUL,EAAaK,GAAWK,YAAU,EAAlD,WACE,iBAAKD,UAAU,wDAAf,WACE,SAAC,IAAD,KACEE,YAAa,gBACTZ,EAAS,SAFf,IAGEP,QAASW,EAAOnB,KAChB4B,UAAS,UAAET,EAAOnB,YAAT,aAAE,EAAaM,YAE1B,SAAC,IAAD,KACEqB,YAAa,gBACbE,KAAK,SACDd,EAAS,cAHf,IAIEP,QAASW,EAAOhB,UAChByB,UAAS,UAAET,EAAOhB,iBAAT,aAAE,EAAkBG,YAE/B,SAAC,IAAD,KACEqB,YAAa,kBACbG,mBAAmB,iBACff,EAAS,YAHf,IAIEP,QAASW,EAAOd,QAChBuB,UAAS,UAAET,EAAOd,eAAT,aAAE,EAAgBC,YAE7B,SAAC,IAAD,KACEqB,YAAa,kBACbG,mBAAmB,gBACnBL,UAAU,aACNV,EAAS,YAJf,IAKEP,QAASW,EAAOb,QAChBsB,UAAS,UAAET,EAAOb,eAAT,aAAE,EAAgBA,WAE5BI,IACC,eAAGe,UAAU,sDAAb,WACE,SAAC,IAAD,KACA,iBAAMA,UAAU,OAAhB,UACE,0FAILjB,IAAS,cAAGiB,UAAU,wCAAb,SAAsDjB,QAElE,gBAAKiB,UAAU,wBAAf,UACE,mBAAQM,SAAUX,EAAcK,UAAU,qBAA1C,SACGL,EAAe,wBAAmB,6B,0tBCzG/C,IAAMY,EAAWC,EAAAA,YAGf,WAAgEC,GAAQ,IAArET,EAAqE,EAArEA,UAAWG,EAA0D,EAA1DA,UAAWpB,EAA+C,EAA/CA,MAAOsB,EAAwC,EAAxCA,mBAAuBK,GAAiB,YACxE,OACE,iBAAKV,UAAWK,EAAhB,WACE,yBACEL,WAAWW,EAAAA,EAAAA,GAAKX,EAAW,qBAAsB,CAC/C,mBAAoBjB,KAElB2B,GAJN,IAKED,IAAKA,KAEN1B,IACC,cACEiB,WAAWW,EAAAA,EAAAA,GAAK,qCAAsC,CACpD,iBAAkB5B,IAFtB,SAIGoB,UAOXI,EAASK,YAAc,WAEvB,O,wLCvBMf,EAAO,CACX,CACEgB,MACE,gBAAKb,UAAU,WAAf,UACE,SAAC,IAAD,MAGJc,OAAO,2DACPC,aACE,kIAMJ,CACEF,MACE,gBAAKb,UAAU,WAAf,UACE,SAAC,IAAD,MAGJc,OAAO,2CACPC,aACE,oHAKJ,CACEF,MACE,gBAAKb,UAAU,WAAf,UACE,SAAC,IAAD,MAGJc,OAAO,4CACPC,aACE,8HA+DN,UAvDwB,WACtB,OACE,SAAC,IAAD,WACE,4BACE,qBACEC,MAAO,CACLC,WAAYC,EAAAA,EACZC,oBAAqBD,EAAAA,GAEvBlB,WAAWW,EAAAA,EAAAA,GAAKS,EAAAA,GAAU,qCAL5B,WAME,gBACEJ,MAAO,CACLK,IAAKH,EAAAA,GAEPlB,UAAU,0CAJZ,UAKE,gBAAKA,UAAU,0BAAf,UACE,SAAC,UAAD,CAAOsB,IAAI,2BAA2BC,IAAI,GAAGC,OAAO,OAAOC,UAAU,eAGzE,iBAAKzB,UAAU,gCAAf,WACE,eAAIA,UAAU,2GAAd,UACE,oEAEF,cAAGA,UAAU,yDAAb,UACE,uHAMJ,eAAIA,UAAU,oCAAd,yBACA,gBAAKA,UAAU,gGAAf,SACGH,EAAK6B,KAAI,SAACC,EAAMC,GAAP,OACR,UAAC,IAAD,CAEEf,KAAMc,EAAKd,KACXb,WAAWW,EAAAA,EAAAA,GAAK,8BAA+B,CAC7C,iBAA0B,IAARiB,IAJtB,WAME,eAAI5B,UAAU,iDAAd,SAAgE2B,EAAKb,SACrE,cAAGd,UAAU,iCAAb,SAA+C2B,EAAKZ,gBAN/Ca,YAWb,oBAAS5B,WAAWW,EAAAA,EAAAA,GAAKS,EAAAA,GAAU,yBAAnC,UACE,gBAAKpB,UAAU,wBAAf,UACE,SAAC,IAAD,e,uBCvGP6B,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,eACA,WACE,OAAO,EAAQ,W","sources":["webpack://_N_E/./src/components/GetInTouch.tsx","webpack://_N_E/./src/components/Textarea.tsx","webpack://_N_E/./src/pages/for-studios.tsx","webpack://_N_E/?e158"],"sourcesContent":["import React, { useState } from 'react';\nimport Input from './Input';\nimport Textarea from './Textarea';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { additionalApiClient } from 'src/client';\nimport CircleCheck from './icons/CircleCheck';\nimport { t, Trans } from '@lingui/macro';\n\ninterface IFormInputs {\n  name: string;\n  fromEmail: string;\n  subject: string;\n  message: string;\n}\n\nconst schema = yup\n  .object({\n    name: yup\n      .string()\n      .trim()\n      .required(t`Name is required!`),\n    fromEmail: yup\n      .string()\n      .email(t`Invalid email!`)\n      .required(t`Email is required!`),\n    subject: yup\n      .string()\n      .trim()\n      .required(t`Subject is required!`),\n    message: yup\n      .string()\n      .trim()\n      .required(t`Message is required!`)\n  })\n  .required();\n\nconst GetInTouch: React.FC = () => {\n  const [error, setError] = useState('');\n  const [success, setIsSubmitSuccess] = useState<boolean>(false);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitting }\n  } = useForm<IFormInputs>({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = async (data: IFormInputs) => {\n    try {\n      setError('');\n      setIsSubmitSuccess(false);\n\n      await additionalApiClient\n        .post('/contact-us', data)\n        .then(() => setIsSubmitSuccess(true))\n        .catch((error) => {\n          setError(error.message);\n          setIsSubmitSuccess(false);\n        });\n      reset();\n    } catch (error: any) {\n      setError(error?.message);\n      setIsSubmitSuccess(false);\n    }\n  };\n\n  return (\n    <div className=\"w-full rounded-[20px] bg-[url('/images/get-in-touch/panel_op.png')] bg-cover bg-center p-[32px] md:py-[64px] md:px-[100px] lg:px-[216px]\">\n      <h2 className=\"heading-sm text-center md:heading-md\">Get in touch</h2>\n      <form onSubmit={handleSubmit(onSubmit)} noValidate>\n        <div className=\"mt-[48px] grid gap-[32px] gap-x-[28px] md:grid-cols-2\">\n          <Input\n            placeholder={t`Name`}\n            {...register('name')}\n            error={!!errors.name}\n            errorText={errors.name?.message}\n          />\n          <Input\n            placeholder={t`Email`}\n            type=\"email\"\n            {...register('fromEmail')}\n            error={!!errors.fromEmail}\n            errorText={errors.fromEmail?.message}\n          />\n          <Input\n            placeholder={t`Subject`}\n            containerClassName=\"md:col-span-2\"\n            {...register('subject')}\n            error={!!errors.subject}\n            errorText={errors.subject?.message}\n          />\n          <Textarea\n            placeholder={t`Message`}\n            containerClassName=\"md:col-span-2\"\n            className=\"h-[180px]\"\n            {...register('message')}\n            error={!!errors.message}\n            errorText={errors.message?.message}\n          />\n          {success && (\n            <p className=\"flex items-center text-xs leading-[15px] text-white\">\n              <CircleCheck />\n              <span className=\"ml-1\">\n                <Trans>Thank you for message. We will be in touch within 24-48 hours!</Trans>\n              </span>\n            </p>\n          )}\n          {error && <p className=\"text-xs leading-[15px] text-[#F37272]\">{error}</p>}\n        </div>\n        <div className=\"mt-6 flex justify-end\">\n          <button disabled={isSubmitting} className=\"btn-lg btn-primary\">\n            {isSubmitting ? t`Submitting...` : t`Submit`}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default GetInTouch;\n","import React from 'react';\nimport clsx from 'clsx';\n\ntype Props = {\n  errorText?: string;\n  error?: boolean;\n  containerClassName?: string;\n};\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  Props & React.HTMLProps<HTMLTextAreaElement>\n>(({ className, errorText, error, containerClassName, ...props }, ref) => {\n  return (\n    <div className={containerClassName}>\n      <textarea\n        className={clsx(className, 'input block w-full', {\n          'border-[#F37272]': error\n        })}\n        {...props}\n        ref={ref}\n      />\n      {error && (\n        <p\n          className={clsx('text-[14px] leading-[1.5] mt-[7px]', {\n            'text-[#F37272]': error\n          })}>\n          {errorText}\n        </p>\n      )}\n    </div>\n  );\n});\n\nTextarea.displayName = 'Textarea';\n\nexport default Textarea;\n","import { t, Trans } from '@lingui/macro';\nimport clsx from 'clsx';\nimport Image from 'next/image';\nimport React from 'react';\nimport CardWithIcon from '../components/CardWithIcon';\nimport GetInTouch from '../components/GetInTouch';\nimport { headerHeight } from '../components/Header';\nimport ChartIcon from '../components/icons/ChartIcon';\nimport StarIcon from '../components/icons/StarIcon';\nimport UserIcon from '../components/icons/UserIcon';\nimport Page from '../components/Page';\nimport { paddingX } from '../utils';\n\nconst data = [\n  {\n    icon: (\n      <div className=\"w-[64px]\">\n        <ChartIcon />\n      </div>\n    ),\n    title: <Trans>Blockchain platform for game studios</Trans>,\n    description: (\n      <Trans>\n        We provide a full suite of blockchain infrastructure on the Myria chain, our Ethereum L2\n        built for gaming.{' '}\n      </Trans>\n    )\n  },\n  {\n    icon: (\n      <div className=\"w-[64px]\">\n        <UserIcon />\n      </div>\n    ),\n    title: <Trans>Myria ecosystem fund</Trans>,\n    description: (\n      <Trans>\n        Got an innovative gaming idea? Apply for a grant to manifest your vision on the Myria chain.\n      </Trans>\n    )\n  },\n  {\n    icon: (\n      <div className=\"w-[64px]\">\n        <StarIcon />\n      </div>\n    ),\n    title: <Trans>Education and support</Trans>,\n    description: (\n      <Trans>\n        Access ongoing education and technical support to ensure a successful onboarding onto the\n        blockchain.{' '}\n      </Trans>\n    )\n  }\n];\n\nconst Games: React.FC = () => {\n  return (\n    <Page>\n      <div>\n        <section\n          style={{\n            paddingTop: headerHeight,\n            backgroundPositionY: headerHeight\n          }}\n          className={clsx(paddingX, 'relative isolate md:min-h-screen ')}>\n          <div\n            style={{\n              top: headerHeight\n            }}\n            className=\"absolute left-0 z-[-1] h-[783px] w-full\">\n            <div className=\"relative h-full w-full \">\n              <Image src=\"/images/header-bg_op.png\" alt=\"\" layout=\"fill\" objectFit=\"cover\" />\n            </div>\n          </div>\n          <div className=\"mx-auto w-full max-w-content \">\n            <h1 className=\"heading-lg mx-auto mt-[50px] max-w-[756px] text-center text-brand-white md:heading-massive md:mt-[120px]\">\n              <Trans>Blockchain infrastructure for Game Studios</Trans>\n            </h1>\n            <p className=\"heading-sm mx-auto mt-[32px] max-w-[672px] text-center\">\n              <Trans>\n                An end-to-end solution for token-based game economies and NFTs that benefits the\n                community\n              </Trans>\n            </p>\n          </div>\n          <h2 className=\"heading-md mt-[252px] text-center\">What we do</h2>\n          <div className=\"mx-auto mt-[92px] grid  max-w-content gap-y-[78px] gap-x-[32px] md:grid-cols-4 xl:grid-cols-3\">\n            {data.map((item, idx) => (\n              <CardWithIcon\n                key={idx}\n                icon={item.icon}\n                className={clsx('md:col-span-2 xl:col-span-1', {\n                  'md:col-start-2': idx === 2\n                })}>\n                <h3 className=\"heading-sm mx-auto max-w-[314px] md:heading-md\">{item.title}</h3>\n                <p className=\"body-sm mt-6 mb-[62px] md:body\">{item.description}</p>\n              </CardWithIcon>\n            ))}\n          </div>\n        </section>\n        <section className={clsx(paddingX, 'mt-[120px] mb-[200px]')}>\n          <div className=\"mx-auto max-w-content\">\n            <GetInTouch />\n          </div>\n        </section>\n      </div>\n    </Page>\n  );\n};\n\nexport default Games;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/for-studios\",\n      function () {\n        return require(\"private-next-pages/for-studios.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/for-studios\"])\n      });\n    }\n  "],"names":["schema","yup","name","trim","required","fromEmail","email","subject","message","useState","error","setError","success","setIsSubmitSuccess","useForm","resolver","yupResolver","register","handleSubmit","reset","formState","errors","isSubmitting","onSubmit","data","additionalApiClient","then","className","noValidate","placeholder","errorText","type","containerClassName","disabled","Textarea","React","ref","props","clsx","displayName","icon","title","description","style","paddingTop","headerHeight","backgroundPositionY","paddingX","top","src","alt","layout","objectFit","map","item","idx","window","__NEXT_P","push"],"sourceRoot":""}